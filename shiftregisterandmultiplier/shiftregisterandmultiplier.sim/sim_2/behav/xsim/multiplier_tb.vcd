$date
   Sun Apr 14 22:23:29 2024
$end

$version
  2023.2
  $dumpfile ("multiplier_tb.vcd") 
$end

$timescale
  1ps
$end

$scope module tb_multiplier $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 4 # inp [3:0] $end
$var wire 7 $ sum [6:0] $end
$scope module uut $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 4 ' inp [3:0] $end
$var wire 7 $ sum [6:0] $end
$var wire 6 ( nstar2_extended [5:0] $end
$var wire 6 ) nstar4_extended [5:0] $end
$var wire 6 * intermediate_sum [5:0] $end
$var wire 1 + carry_out $end
$scope module m2 $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 4 ' A [3:0] $end
$var wire 2 , selection [1:0] $end
$var reg 6 - shifted [5:0] $end
$var reg 6 . register [5:0] $end
$upscope $end
$scope module m4 $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 4 ' A [3:0] $end
$var wire 2 / selection [1:0] $end
$var reg 6 0 shifted [5:0] $end
$var reg 6 1 register [5:0] $end
$upscope $end
$scope module a1 $end
$var wire 6 ( A [5:0] $end
$var wire 6 ) B [5:0] $end
$var wire 1 2 Cin $end
$var wire 6 * Sum [5:0] $end
$var wire 1 + Cout $end
$var wire 6 3 G [5:0] $end
$var wire 6 4 P [5:0] $end
$var wire 7 5 C [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
1"
b0 #
b0 $
0%
1&
b0 '
b0 (
b0 )
b0 *
0+
b1 ,
b0 -
b0 .
b11 /
b0 0
b0 1
02
b0 3
b0 4
b0 5
$end

#10000
1!
1%

#20000
0!
0%

#30000
1!
0"
b1 #
b110 $
1%
0&
b1 '
b10 (
b100 )
b110 *
b10 -
b10 .
b100 0
b100 1
b110 4

#40000
0!
0%

#50000
1!
b10 #
b1100 $
1%
b10 '
b100 (
b1000 )
b1100 *
b100 -
b100 .
b1000 0
b1000 1
b1100 4

#60000
0!
0%

#70000
1!
b11 #
b10010 $
1%
b11 '
b110 (
b1100 )
b10010 *
b110 -
b110 .
b1100 0
b1100 1
b100 3
b1010 4
b11000 5

#80000
0!
0%

#90000
1!
b100 #
b11000 $
1%
b100 '
b1000 (
b10000 )
b11000 *
b1000 -
b1000 .
b10000 0
b10000 1
b0 3
b11000 4
b0 5

#100000
0!
0%

#110000
1!
b101 #
b11110 $
1%
b101 '
b1010 (
b10100 )
b11110 *
b1010 -
b1010 .
b10100 0
b10100 1
b11110 4

#120000
0!
0%

#130000
1!
b110 #
b100100 $
1%
b110 '
b1100 (
b11000 )
b100100 *
b1100 -
b1100 .
b11000 0
b11000 1
b1000 3
b10100 4
b110000 5

#140000
0!
0%

#150000
1!
b111 #
b101010 $
1%
b111 '
b1110 (
b11100 )
b101010 *
b1110 -
b1110 .
b11100 0
b11100 1
b1100 3
b10010 4
b111000 5

#160000
0!
0%

#170000
1!
b1000 #
b110000 $
1%
b1000 '
b10000 (
b100000 )
b110000 *
0+
b10000 -
b10000 .
b100000 0
b100000 1
b0 3
b110000 4
b0 5

#180000
0!
0%

#190000
1!
b1001 #
b110110 $
1%
b1001 '
b10010 (
b100100 )
b110110 *
b10010 -
b10010 .
b100100 0
b100100 1
b110110 4

#200000
0!
0%

#210000
1!
b1010 #
b111100 $
1%
b1010 '
b10100 (
b101000 )
b111100 *
b10100 -
b10100 .
b101000 0
b101000 1
b111100 4

#220000
0!
0%

#230000
1!
b1011 #
b1000010 $
1%
b1011 '
b10110 (
b101100 )
b10 *
1+
b10110 -
b10110 .
b101100 0
b101100 1
b100 3
b111010 4
b1111000 5

#240000
0!
0%

#250000
1!
b1100 #
b1001000 $
1%
b1100 '
b11000 (
b110000 )
b1000 *
b11000 -
b11000 .
b110000 0
b110000 1
b10000 3
b101000 4
b1100000 5

#260000
0!
0%

#270000
1!
b1101 #
b1001110 $
1%
b1101 '
b11010 (
b110100 )
b1110 *
b11010 -
b11010 .
b110100 0
b110100 1
b101110 4

#280000
0!
0%

#290000
1!
b1110 #
b1010100 $
1%
b1110 '
b11100 (
b111000 )
b10100 *
b11100 -
b11100 .
b111000 0
b111000 1
b11000 3
b100100 4
b1110000 5

#300000
0!
0%

#310000
1!
b1111 #
b1011010 $
1%
b1111 '
b11110 (
b111100 )
b11010 *
b11110 -
b11110 .
b111100 0
b111100 1
b11100 3
b100010 4
b1111000 5
